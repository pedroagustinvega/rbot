{
  "botStarted": "Discord bot started successfully.",
  "botStopped": "Discord bot stopped successfully.",
  "commands": {
    "noPerms": "You don't have permission to use this command.",
    "verify": {
      "embed": {
        "title": "ðŸ”° Verification System",
        "description": "Hello!\n Welcome to my discord server. To access the channels click on the green button!",
        "roleNotFound": "Verification role not found. We are sorry for the inconvenience",
        "roleNotFoundLog": "Verification role not found. Check the role id in the config file.",
        "buttonText": "Click me!"
      },
      "verifySuccess": "You have been successfully verified! Welcome to the server!",
      "redButtonText": "You need click on the green button to verify yourself!"
    },
    "docs": {
      "description": "Shows the documentation of a project.",
      "guideNotFound": "Guide not found. Check the guide name and try again.",
      "embed": {
        "title": "ðŸ“š %project% Documentation - ",
        "footer": "Requested by %user%"
      },
      "projects": {
        "mcptool": {
          "description": "Pentesting tool for Minecraft.",
          "guides": {
            "How to install": "To install MCPTool follow these steps:\n https://github.com/pedroagustinvega/mcptool/blob/main/docs/instalation.MD",
            "How to uninstall": "If you install mcptool using pip, just use pip uninstall mcptool and delete the MCPToolData folder in %appdata%. If you installed it with the .msi installer, you need to uninstall it from the control panel and delete the folder mentioned above.",
            "How to use": "To use MCPTool, open the command prompt and type mcptool.",
            "How to use the fakeproxy command": ""
          }
        },
        "mcpclient": {
          "description": "Minecraft Client for Pentesting.",
            "guides": {
              "How to install": "To install MCPClient follow these steps: https://github.com/pedroagustinvega/mcpclient/blob/main/README.md\n"
            }
        }
      }
    },
    "partner": {
      "description": "Add or remove a partner from the list.",
      "partnerExists": "Partner already exists. Check the partner name and try again.",
      "partnerNotFound": "Partner not found. Check the partner name and try again.",
      "partnerMessageNotFound": "Embed message not found. Check the message id in the config file.",
      "partnerAdded": "Partner added successfully.",
      "partnerRemoved": "Partner removed successfully.",
      "embed": {
        "footer": "Partner of the server."
      }
    }
  },
  "tasks": {
    "canalCleaning": {
      "cloneReason": "Cloning channels to keep the original.",
      "deleteReason": "Clearing channels from messages.",
      "success": "Channel cleaning completed successfully."
    }
  },
  "generalErrors": {
    "invalidUrl": "Invalid URL. Check the URL and try again."
  }
}
